spring.application.name=core-crm-service

# Server Configuration
server.port=8080

# Database Configuration (Messaging System)
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5432/crm_messaging_dev}
spring.datasource.username=${DATABASE_USERNAME:crm_user}
spring.datasource.password=${DATABASE_PASSWORD:crm_password}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Redis Configuration
spring.data.redis.url=${REDIS_URL:redis://localhost:6379}
spring.data.redis.timeout=2000ms
spring.data.redis.lettuce.pool.max-active=8
spring.data.redis.lettuce.pool.max-wait=-1ms
spring.data.redis.lettuce.pool.max-idle=8
spring.data.redis.lettuce.pool.min-idle=0

# JWT Configuration
jwt.secret=${JWT_SECRET:dev_jwt_secret_key_for_messaging_system_at_least_32_chars}
jwt.access-token-expiration=${JWT_ACCESS_TOKEN_EXPIRATION:3600000}
jwt.refresh-token-expiration=${JWT_REFRESH_TOKEN_EXPIRATION:604800000}
jwt.algorithm=HS256


# ✅ NEW - File Storage Configuration (for Telegram/WhatsApp media)
messaging.storage.provider=${STORAGE_PROVIDER:local}
messaging.storage.local.base-path=${STORAGE_LOCAL_PATH:./uploads/messaging}
messaging.storage.s3.bucket-name=${S3_BUCKET_NAME:crm-messaging-files}
messaging.storage.s3.region=${S3_REGION:us-east-1}
messaging.storage.s3.access-key=${S3_ACCESS_KEY:}
messaging.storage.s3.secret-key=${S3_SECRET_KEY:}

# ✅ NEW - Media Processing Configuration
messaging.media.image.max-width=${MEDIA_IMAGE_MAX_WIDTH:1920}
messaging.media.image.max-height=${MEDIA_IMAGE_MAX_HEIGHT:1080}
messaging.media.image.quality=${MEDIA_IMAGE_QUALITY:85}
messaging.media.thumbnail.width=${MEDIA_THUMBNAIL_WIDTH:320}
messaging.media.thumbnail.height=${MEDIA_THUMBNAIL_HEIGHT:240}

# ✅ NEW - Rate Limiting Configuration
messaging.rate-limit.enabled=${RATE_LIMIT_ENABLED:true}
messaging.rate-limit.telegram.messages-per-second=${TELEGRAM_RATE_LIMIT:30}
messaging.rate-limit.whatsapp.messages-per-second=${WHATSAPP_RATE_LIMIT:80}
messaging.rate-limit.window-size-seconds=${RATE_LIMIT_WINDOW:60}

# Logging Configuration
logging.level.com.backend=DEBUG
logging.level.com.backend.core.messaging.platforms=INFO
logging.level.org.springframework.security=INFO
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# ✅ NEW - Platform-specific Logging
logging.level.com.backend.core.messaging.platforms.telegram=DEBUG
logging.level.com.backend.core.messaging.platforms.whatsapp=DEBUG

# Management Endpoints (for health checks)
management.endpoints.web.exposure.include=health,info,metrics,telegram,whatsapp
management.endpoint.health.show-details=always

# ✅ NEW - Custom Health Indicators
management.health.telegram.enabled=${TELEGRAM_HEALTH_CHECK_ENABLED:true}
management.health.whatsapp.enabled=${WHATSAPP_HEALTH_CHECK_ENABLED:true}
management.health.messaging.enabled=true

# Security Configuration
spring.security.require-ssl=false

# ✅ NEW - Monitoring and Metrics
messaging.metrics.enabled=${METRICS_ENABLED:true}
messaging.metrics.export.prometheus.enabled=${PROMETHEUS_METRICS_ENABLED:false}
messaging.metrics.export.influx.enabled=${INFLUX_METRICS_ENABLED:false}

# ✅ NEW - Background Job Configuration
messaging.jobs.cleanup.enabled=${CLEANUP_JOBS_ENABLED:true}
messaging.jobs.cleanup.schedule=${CLEANUP_SCHEDULE:0 2 * * *}
messaging.jobs.cleanup.retention-days=${CLEANUP_RETENTION_DAYS:90}
messaging.jobs.stats.enabled=${STATS_JOBS_ENABLED:true}
messaging.jobs.stats.schedule=${STATS_SCHEDULE:0 0 * * *}